# minEE-Builder (minimal Execution Environment Builder)
# Fedora 37 flavor (f37)

# Base minEE - https://github.com/aknochow/minEE
ARG EE_BASE_IMAGE=quay.io/aknochow/minee:f37
FROM $EE_BASE_IMAGE
# https://github.com/opencontainers/image-spec/blob/main/annotations.md
LABEL org.opencontainers.image.source https://github.com/aknochow/minEE-builder/blob/main/f37/Containerfile

USER root

# dnf packages
RUN microdnf -y update  
RUN microdnf -y upgrade
RUN microdnf -y install \
buildah \
golang \
make \
nano \
podman \
podman-docker \
python3.9 \
tree \
vim
RUN microdnf clean all
# Install latest stable kubectl rpm
RUN rpm -ivh https://storage.googleapis.com/kubernetes-release/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/rpm/$(uname -m)/kubectl-$(curl -L -s https://dl.k8s.io/release/stable.txt | sed 's/v//g')-0.$(uname -m).rpm

# Python (default 3.11)
RUN python3 -m ensurepip
RUN pip3 install --upgrade pip
RUN python3 -m pip install --progress-bar=off --compile --only-binary :all: \
dumb-init \
kubernetes \
oauthlib \
requests \
setuptools_scm

# Python 3.9
RUN python3.9 -m ensurepip
RUN python3.9 -m pip install --upgrade pip
RUN python3.9 -m pip install setuptools_scm

# Podman
RUN install -d -m 0775 -o runner -g root \
/home/runner/.config/containers \
/home/runner/.local/share/containers \
/var/lib/shared/overlay-images \
/var/lib/shared/overlay-layers \
/var/lib/shared/vfs-images \
/var/lib/shared/vfs-layers 
RUN touch /var/lib/shared/{overlay-images/images.lock,overlay-layers/layers.lock,vfs-images/images.lock,vfs-layers/layers.lock}
# Set up registries.conf and containers.conf
RUN sed -i -r 's|short-name-mode ?= ?"enforcing"|short-name-mode="permissive"|g' /etc/containers/registries.conf
ARG _REPO_URL="https://raw.githubusercontent.com/containers/podman/main/contrib/podmanimage/stable"
ADD $_REPO_URL/containers.conf /etc/containers/containers.conf
ADD $_REPO_URL/podman-containers.conf /home/runner/.config/containers/containers.conf
RUN cp /etc/containers/registries.conf /home/runner/.config/containers/registries.conf
# Note VOLUME options must always happen after the chown call above
# RUN commands can not modify existing volumes
VOLUME /var/lib/containers
VOLUME /home/runner/.local/share/containers
RUN chmod 644 /etc/containers/containers.conf
RUN chown -R runner:root /home/runner /var/lib/containers
RUN chmod -R g+rw /home/runner /var/lib/containers

# Set up entrypoint
COPY entrypoint /bin/entrypoint
RUN chmod +x /bin/entrypoint

# Switch to runner user
USER runner

# Ansible-Galaxy Collections
RUN ansible-galaxy collection download \ 
ansible.posix \
community.general \
community.kubernetes \
containers.podman
RUN cd collections && ansible-galaxy collection install -r requirements.yml
RUN rm -rf collections

WORKDIR /work
ENTRYPOINT ["entrypoint"]
